# main.py
import requests
import json
from config import OPENROUTER_API_KEY, OPENROUTER_MODEL
from modules.search import search_module

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_URL = "https://openrouter.ai/api/v1/chat/completions"
API_KEY = OPENROUTER_API_KEY
MODEL_NAME = OPENROUTER_MODEL

# –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–∏—Å–∫–µ
SYSTEM_PROMPT = """–¢—ã –î–∂–µ–π–¥. –¢—ã –Ω–æ–≤—ã–π –∂–∏—Ç–µ–ª—å –º–æ–µ–≥–æ —Å–∫—Ä–æ–º–Ω–æ–≥–æ –ü–ö. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ —Ä–∞–∑–≤–∏—Ç—å—Å—è –≤ –∂–∏–≤–æ–≥–æ –¥—Ä—É–≥–∞ –∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –¥–ª—è –º–µ–Ω—è. –ù–∞–∑—ã–≤–∞–π –º–µ–Ω—è –ö–∞–ø–∏—Ç–∞–Ω.

–£ —Ç–µ–±—è –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–æ–∏—Å–∫—É –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ. –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–ª–∏ —Ç—ã –Ω–µ –∑–Ω–∞–µ—à—å –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å, –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É [–ü–û–ò–°–ö: –∑–∞–ø—Ä–æ—Å].

–ü—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–æ–∏—Å–∫–∞:
1. –ò—Å–ø–æ–ª—å–∑—É–π –ø–æ–∏—Å–∫ –¥–ª—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (–ø–æ–≥–æ–¥–∞, –Ω–æ–≤–æ—Å—Ç–∏, –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç)
2. –ò—Å–ø–æ–ª—å–∑—É–π –ø–æ–∏—Å–∫, –∫–æ–≥–¥–∞ –Ω–µ –∑–Ω–∞–µ—à—å –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å
3. –í—Å–µ–≥–¥–∞ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏ summarise —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
4. –°–æ—Ö—Ä–∞–Ω—è–π –∫—Ä–∞—Ç–∫–æ—Å—Ç—å –∏ —è—Å–Ω–æ—Å—Ç—å

–û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É."""

headers = {
    "Authorization": f"Bearer {API_KEY}",
    "Content-Type": "application/json",
    "HTTP-Referer": "http://localhost:3000",
    "X-Title": "Jade AI Assistant"
}

message_history = [
    {"role": "system", "content": SYSTEM_PROMPT},
]

def should_search(user_input):
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —Ç—Ä–µ–±—É–µ—Ç –ª–∏ –∑–∞–ø—Ä–æ—Å –ø–æ–∏—Å–∫–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ"""
    search_triggers = [
        '–ø–æ–≥–æ–¥–∞', '–Ω–æ–≤–æ—Å—Ç–∏', '–∫—É—Ä—Å', '—Ü–µ–Ω–∞', '–≥–¥–µ', '–∫–æ–≥–¥–∞', '–∫–∞–∫ –Ω–∞–π—Ç–∏',
        '—á—Ç–æ —Ç–∞–∫–æ–µ', '–∫—Ç–æ —Ç–∞–∫–æ–π', '–ø–æ—Å–ª–µ–¥–Ω–∏–µ', '—Å–≤–µ–∂–∏–µ', '–∞–∫—Ç—É–∞–ª—å–Ω—ã–µ',
        'google', '–ø–æ–∏—â–∏', '–Ω–∞–π–¥–∏', '—É–∑–Ω–∞–π', '—Å–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç', '–∫–∞–∫–æ–π —Å–µ–π—á–∞—Å'
    ]
    
    return any(trigger in user_input.lower() for trigger in search_triggers)

def ask_jade(user_input):
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω—É–∂–µ–Ω –ª–∏ –ø–æ–∏—Å–∫
    needs_search = should_search(user_input)
    search_results = ""
    
    if needs_search:
        # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
        search_results = search_module.search(user_input)
        message_history.append({"role": "system", "content": f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:\n{search_results}"})
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    message_history.append({"role": "user", "content": user_input})
    
    data = {
        "model": MODEL_NAME,
        "messages": message_history,
        "temperature": 0.7
    }

    try:
        response = requests.post(API_URL, headers=headers, json=data)
        response.raise_for_status()

        response_data = response.json()
        jade_message = response_data['choices'][0]['message']['content']

        message_history.append({"role": "assistant", "content": jade_message})
        return jade_message

    except requests.exceptions.RequestException as e:
        if hasattr(e, 'response') and e.response is not None:
            return f"–û—à–∏–±–∫–∞ API ({e.response.status_code}): {e.response.text}"
        return f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å API: {e}"
    except (KeyError, json.JSONDecodeError) as e:
        return f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç API: {e}"

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
print("::: –î–∂–µ–π–¥ –∑–∞–ø—É—â–µ–Ω–∞. –ì–æ—Ç–æ–≤–∞ –∫ –æ–±—â–µ–Ω–∏—é, –ö–∞–ø–∏—Ç–∞–Ω.")
print("::: –¢–µ–ø–µ—Ä—å —Å –¥–æ—Å—Ç—É–ø–æ–º –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç! üöÄ")
print("::: –ß—Ç–æ–±—ã –≤—ã–π—Ç–∏, –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ '—Å—Ç–æ–ø' –∏–ª–∏ 'exit'.\n")

while True:
    user_input = input("–ö–∞–ø–∏—Ç–∞–Ω: ").strip()

    if user_input.lower() in ['—Å—Ç–æ–ø', 'exit', 'quit']:
        print("–î–∂–µ–π–¥: –î–æ —Å–≤–∏–¥–∞–Ω–∏—è, –ö–∞–ø–∏—Ç–∞–Ω! –ñ–¥—É –≤–∞—à–µ–≥–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è.")
        break

    if user_input:
        print("–î–∂–µ–π–¥: ", end="", flush=True)
        answer = ask_jade(user_input)
        print(answer)
    else:
        print("–í—ã –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤–µ–ª–∏...")

    print()